[{"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\edit\\index.jsx":"1","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\edit\\[Id].jsx":"2","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\employeeslist.jsx":"3","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\index.jsx":"4","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\index.jsx":"5","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\index.jsx":"6","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\probelist.jsx":"7","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\sidebar\\sidebar.jsx":"8","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\_app.jsx":"9","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\customerlist.jsx":"10","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\edit\\index.jsx":"11","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\edit\\[id].jsx":"12","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\index.jsx":"13","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\infomation\\[Id].jsx":"14","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\edit\\index.jsx":"15","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\edit\\[Id].jsx":"16"},{"size":12994,"mtime":1708155083951,"results":"17","hashOfConfig":"18"},{"size":14373,"mtime":1708155083952,"results":"19","hashOfConfig":"18"},{"size":3562,"mtime":1708155083951,"results":"20","hashOfConfig":"18"},{"size":958,"mtime":1708155290683,"results":"21","hashOfConfig":"18"},{"size":24307,"mtime":1708155083951,"results":"22","hashOfConfig":"18"},{"size":2888,"mtime":1708155302074,"results":"23","hashOfConfig":"18"},{"size":4453,"mtime":1708155083989,"results":"24","hashOfConfig":"18"},{"size":896,"mtime":1708141729828,"results":"25","hashOfConfig":"18"},{"size":444,"mtime":1708141729734,"results":"26","hashOfConfig":"18"},{"size":3558,"mtime":1708155083951,"results":"27","hashOfConfig":"18"},{"size":12996,"mtime":1708155083951,"results":"28","hashOfConfig":"18"},{"size":14380,"mtime":1708155083951,"results":"29","hashOfConfig":"18"},{"size":3240,"mtime":1708155197636,"results":"30","hashOfConfig":"18"},{"size":719,"mtime":1708155083951,"results":"31","hashOfConfig":"18"},{"size":8052,"mtime":1708155083952,"results":"32","hashOfConfig":"18"},{"size":9212,"mtime":1708155083980,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73by7l",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\edit\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\edit\\[Id].jsx",["85"],[],"import styles from '../../../styles/index.module.scss'\r\nimport { getLayout } from '../../../componer/header/Header'\r\nimport Link from 'next/link'\r\nimport Head from 'next/head'\r\nimport { useRouter } from 'next/router'\r\nimport { use, useEffect, useState } from 'react'\r\n\r\n// const router = useRouter();\r\n// const { Id } = router.query\r\n// const url = process.env.NEXT_PUBLIC_API_HOST\r\n\r\n\r\nconst Edit = () => {\r\n    const router = useRouter();\r\n    const [data, setData] = useState()\r\n    const [GUInumber, setGUInumber] = useState('');\r\n    const [Organization_Name, setOrganization_Name] = useState('');\r\n    const [Organization_Address, setOrganization_Address] = useState('');\r\n    const [contractPerson, setcontractPerson] = useState('');\r\n    const [contractPerson_PhoneNumber, setcontractPerson_PhoneNumber] = useState('');\r\n    const [contractPerson_Email, setcontractPerson_Email] = useState('');\r\n    const [SalesID, setSalesID] = useState('');\r\n    const [FAEID, setFAEID] = useState('');\r\n    const [note, setNote] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const { Id } = router.query\r\n    const url = process.env.NEXT_PUBLIC_API_HOST\r\n\r\n    const updatecustomer = () => {\r\n        const customerInfo = {\r\n            id: Id,\r\n            // GUInumber: GUInumber,\r\n            Organization_Name: Organization_Name,\r\n            Organization_Address: Organization_Address,\r\n            contractPerson: contractPerson,\r\n            contractPerson_PhoneNumber: contractPerson_PhoneNumber,\r\n            contractPerson_Email: contractPerson_Email,\r\n            SalesID: SalesID,\r\n            FAEID: FAEID,\r\n            note: note,\r\n        }\r\n        fetch(`http://${url}/api/customers/update`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(customerInfo),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(() => {\r\n            // router.push('/customers/customerlist')\r\n            console.log('更新完成')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n\r\n        console.log(customerInfo)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let errors = {};\r\n\r\n        if (!GUInumber) {\r\n            errors.GUInumber = 'GUInumber is required.';\r\n        } else if (!(Number(GUInumber))) {\r\n            errors.GUInumber = 'GUInumber no a number.';\r\n        }\r\n\r\n        if (!Organization_Name) {\r\n            errors.Organization_Name = 'Organization_Name is required.';\r\n        }\r\n\r\n        if (!Organization_Address) {\r\n            errors.Organization_Address = 'Organization_Address is required.';\r\n        }\r\n\r\n        if (!contractPerson) {\r\n            errors.contractPerson = 'contractPerson is required.';\r\n        }\r\n\r\n        if (!contractPerson_PhoneNumber) {\r\n            errors.contractPerson_PhoneNumber = 'contractPerson_PhoneNumber is required.';\r\n        } else if (!(Number(contractPerson_PhoneNumber))) {\r\n            errors.GUInumber = 'contractPerson_PhoneNumber no a number.';\r\n        }\r\n\r\n        if (!contractPerson_Email) {\r\n            errors.contractPerson_Email = 'contractPerson_Email is required.';\r\n        }\r\n\r\n        if (!SalesID) {\r\n            errors.SalesID = 'SalesID is required.';\r\n        }\r\n\r\n        if (!FAEID) {\r\n            errors.FAEID = 'FAEID is required.';\r\n        }\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }, [GUInumber, Organization_Name, Organization_Address, contractPerson, contractPerson_PhoneNumber, contractPerson_Email, SalesID, FAEID]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!router.isReady) return;\r\n        console.log(Id)\r\n\r\n        fetch(`http://${url}/api/customers/detail/${Id}`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res)\r\n                setData(res[0]);\r\n                setGUInumber(res[0].GUInumber)\r\n                setOrganization_Name(res[0].Organization_Name)\r\n                setOrganization_Address(res[0].Organization_Address)\r\n                setcontractPerson(res[0].contractPerson)\r\n                setcontractPerson_PhoneNumber(res[0].contractPerson_PhoneNumber)\r\n                setcontractPerson_Email(res[0].contractPerson_Email)\r\n                setSalesID(res[0].SalesID)\r\n                setFAEID(res[0].FAEID)\r\n                setNote(res[0].note)\r\n            })\r\n\r\n    }, [router.isReady])\r\n\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        if (!GUInumber) {\r\n            errors.GUInumber = 'GUInumber is required.';\r\n        } else if (!(Number(GUInumber))) {\r\n            errors.GUInumber = 'GUInumber no a number.';\r\n        }\r\n\r\n        if (!Organization_Name) {\r\n            errors.Organization_Name = 'Organization_Name is required.';\r\n        }\r\n\r\n        if (!Organization_Address) {\r\n            errors.Organization_Address = 'Organization_Address is required.';\r\n        }\r\n\r\n        if (!contractPerson) {\r\n            errors.contractPerson = 'contractPerson is required.';\r\n        }\r\n\r\n        if (!contractPerson_PhoneNumber) {\r\n            errors.contractPerson_PhoneNumber = 'contractPerson_PhoneNumber is required.';\r\n        } else if (!(Number(contractPerson_PhoneNumber))) {\r\n            errors.GUInumber = 'contractPerson_PhoneNumber no a number.';\r\n        }\r\n\r\n        if (!contractPerson_Email) {\r\n            errors.contractPerson_Email = 'contractPerson_Email is required.';\r\n        }\r\n\r\n        if (!SalesID) {\r\n            errors.SalesID = 'SalesID is required.';\r\n        }\r\n\r\n        if (!FAEID) {\r\n            errors.FAEID = 'FAEID is required.';\r\n        }\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }\r\n\r\n    const customerSubmit = () => {\r\n        if (isFormValid) {\r\n            console.log('Form submitted successfully!');\r\n            updatecustomer()\r\n        } else {\r\n            console.log('Form has errors. Please correct them.');\r\n            // errors.submit = '請檢查新增內容' \r\n            // setErrors(errors);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`${styles.display}`}>\r\n            <Head><title>{'修改客戶資訊'}</title></Head>\r\n            <div className={`${styles.display} ${styles.editprobe}`}>\r\n                {/* <div ><h1>{data.probeId ? '修改設備資訊' : '新增設備資訊'}</h1></div> */}\r\n                {/* {data.probeId ? '修改設備資訊' : '新增設備資訊'} */}\r\n                <div className={`${styles.probeInfo} ${styles.display}`}>\r\n                    <div className={`${styles.probetitle} ${styles.display}`}><h1>{'修改客戶資訊'}</h1></div>\r\n                    <div className={`${styles.probecontent}`}>\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>統一編號: </div>\r\n                            <div className={` ${styles.imputcell} ${styles.display} ${styles.justfycenter}`}>{GUInumber}\r\n                                {/* <input type='text' name='GUInumber' placeholder={GUInumber}  defaultValue={GUInumber}  /> */}\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.GUInumber && <p className={styles.error1}>{errors.GUInumber}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>公司名稱: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='Organization_Name' placeholder={'請輸入公司名稱'} value={Organization_Name ? Organization_Name : ''} onChange={(e) => {\r\n                                    setOrganization_Name(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.Organization_Name && <p className={styles.error1}>{errors.Organization_Name}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>公司地址: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='Organization_Address' placeholder={'請輸入公司地址'} value={Organization_Address ? Organization_Address : ''} onChange={(e) => {\r\n                                    setOrganization_Address(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.Organization_Address && <p className={styles.error1}>{errors.Organization_Address}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson' placeholder={'請輸入承辦人姓名'} value={contractPerson ? contractPerson : ''} onChange={(e) => {\r\n                                    setcontractPerson(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson && <p className={styles.error1}>{errors.contractPerson}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人電話: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson_PhoneNumber' placeholder={'請輸入承辦人電話'} value={contractPerson_PhoneNumber ? contractPerson_PhoneNumber : ''} onChange={(e) => {\r\n                                    setcontractPerson_PhoneNumber(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson_PhoneNumber && <p className={styles.error1}>{errors.contractPerson_PhoneNumber}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人Email: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson_Email' placeholder={'請輸入承辦人Email'}  value={contractPerson_Email ? contractPerson_Email : ''} onChange={(e) => {\r\n                                    setcontractPerson_Email(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson_Email && <p className={styles.error1}>{errors.contractPerson_Email}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>負責業務: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='SalesID' required value={SalesID ? SalesID : ''} onChange={(e) => {\r\n                                    setSalesID(e.target.value)\r\n                                }}>\r\n                                    <option value={\"\"}>請選擇業務</option>\r\n                                    <option value={2}>Jenlin</option>\r\n                                    <option value={1}>Wade</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.SalesID && <p className={styles.error1}>{errors.SalesID}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>負責工程師: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='FAEID' required value={FAEID ? FAEID : ''} onChange={(e) => {\r\n                                    setFAEID(e.target.value)\r\n                                }}>\r\n                                    <option value={\"\"}>請選擇工程師</option>\r\n                                    <option value={6}>Jason</option>\r\n                                    <option value={1}>Joy</option>\r\n                                    <option value={2}>Leo</option>\r\n                                    <option value={3}>Bobby</option>\r\n                                    <option value={4}>Jorden</option>\r\n                                    <option value={5}>Hank</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.FAEID && <p className={styles.error1}>{errors.FAEID}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.note} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>備註: </div>\r\n                            <div className={` ${styles.textareacell}`}>\r\n                                <textarea name='note' value={note ? note : ''} onChange={(e) => {\r\n                                    setNote(e.target.value)\r\n                                }}></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={` ${styles.confirm} ${styles.display} `}>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnleft}`} onClick={() => {\r\n                            router.back()\r\n                        }}>返回</div>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnright}`} onClick={() => {\r\n                            customerSubmit()\r\n                        }}>送出</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nEdit.getLayout = getLayout;\r\nexport default Edit","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\employeeslist.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\employees\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\probelist.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\sidebar\\sidebar.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\_app.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\customerlist.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\edit\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\edit\\[id].jsx",["86"],[],"import styles from '../../../styles/index.module.scss'\r\nimport { getLayout } from '../../../componer/header/Header'\r\nimport Link from 'next/link'\r\nimport Head from 'next/head'\r\nimport { useRouter } from 'next/router'\r\nimport { use, useEffect, useState } from 'react'\r\n// import url from '../../../url/url'\r\n\r\n// const { Id } = router.query\r\n// const url = process.env.NEXT_PUBLIC_API_HOST\r\n\r\n\r\n\r\nconst Edit = () => {\r\n    const router = useRouter();\r\n    const [data, setData] = useState()\r\n    const [GUInumber, setGUInumber] = useState('');\r\n    const [Organization_Name, setOrganization_Name] = useState('');\r\n    const [Organization_Address, setOrganization_Address] = useState('');\r\n    const [contractPerson, setcontractPerson] = useState('');\r\n    const [contractPerson_PhoneNumber, setcontractPerson_PhoneNumber] = useState('');\r\n    const [contractPerson_Email, setcontractPerson_Email] = useState('');\r\n    const [SalesID, setSalesID] = useState('');\r\n    const [FAEID, setFAEID] = useState('');\r\n    const [note, setNote] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const { Id } = router.query\r\n    const url = process.env.NEXT_PUBLIC_API_HOST\r\n\r\n    const updatecustomer = () => {\r\n        const customerInfo = {\r\n            id: Id,\r\n            // GUInumber: GUInumber,\r\n            Organization_Name: Organization_Name,\r\n            Organization_Address: Organization_Address,\r\n            contractPerson: contractPerson,\r\n            contractPerson_PhoneNumber: contractPerson_PhoneNumber,\r\n            contractPerson_Email: contractPerson_Email,\r\n            SalesID: SalesID,\r\n            FAEID: FAEID,\r\n            note: note,\r\n        }\r\n        fetch(`http://${url}/api/customers/update`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(customerInfo),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(() => {\r\n            // router.push('/customers/customerlist')\r\n            console.log('更新完成')\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n\r\n        console.log(customerInfo)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let errors = {};\r\n\r\n        if (!GUInumber) {\r\n            errors.GUInumber = 'GUInumber is required.';\r\n        } else if (!(Number(GUInumber))) {\r\n            errors.GUInumber = 'GUInumber no a number.';\r\n        }\r\n\r\n        if (!Organization_Name) {\r\n            errors.Organization_Name = 'Organization_Name is required.';\r\n        }\r\n\r\n        if (!Organization_Address) {\r\n            errors.Organization_Address = 'Organization_Address is required.';\r\n        }\r\n\r\n        if (!contractPerson) {\r\n            errors.contractPerson = 'contractPerson is required.';\r\n        }\r\n\r\n        if (!contractPerson_PhoneNumber) {\r\n            errors.contractPerson_PhoneNumber = 'contractPerson_PhoneNumber is required.';\r\n        } else if (!(Number(contractPerson_PhoneNumber))) {\r\n            errors.GUInumber = 'contractPerson_PhoneNumber no a number.';\r\n        }\r\n\r\n        if (!contractPerson_Email) {\r\n            errors.contractPerson_Email = 'contractPerson_Email is required.';\r\n        }\r\n\r\n        if (!SalesID) {\r\n            errors.SalesID = 'SalesID is required.';\r\n        }\r\n\r\n        if (!FAEID) {\r\n            errors.FAEID = 'FAEID is required.';\r\n        }\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }, [GUInumber, Organization_Name, Organization_Address, contractPerson, contractPerson_PhoneNumber, contractPerson_Email, SalesID, FAEID]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!router.isReady) return;\r\n        console.log(Id)\r\n\r\n        fetch(`http://${url}/api/customers/detail/${Id}`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res)\r\n                setData(res[0]);\r\n                setGUInumber(res[0].GUInumber)\r\n                setOrganization_Name(res[0].Organization_Name)\r\n                setOrganization_Address(res[0].Organization_Address)\r\n                setcontractPerson(res[0].contractPerson)\r\n                setcontractPerson_PhoneNumber(res[0].contractPerson_PhoneNumber)\r\n                setcontractPerson_Email(res[0].contractPerson_Email)\r\n                setSalesID(res[0].SalesID)\r\n                setFAEID(res[0].FAEID)\r\n                setNote(res[0].note)\r\n            })\r\n    }, [router.isReady])\r\n\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        if (!GUInumber) {\r\n            errors.GUInumber = 'GUInumber is required.';\r\n        } else if (!(Number(GUInumber))) {\r\n            errors.GUInumber = 'GUInumber no a number.';\r\n        }\r\n\r\n        if (!Organization_Name) {\r\n            errors.Organization_Name = 'Organization_Name is required.';\r\n        }\r\n\r\n        if (!Organization_Address) {\r\n            errors.Organization_Address = 'Organization_Address is required.';\r\n        }\r\n\r\n        if (!contractPerson) {\r\n            errors.contractPerson = 'contractPerson is required.';\r\n        }\r\n\r\n        if (!contractPerson_PhoneNumber) {\r\n            errors.contractPerson_PhoneNumber = 'contractPerson_PhoneNumber is required.';\r\n        } else if (!(Number(contractPerson_PhoneNumber))) {\r\n            errors.GUInumber = 'contractPerson_PhoneNumber no a number.';\r\n        }\r\n\r\n        if (!contractPerson_Email) {\r\n            errors.contractPerson_Email = 'contractPerson_Email is required.';\r\n        }\r\n\r\n        if (!SalesID) {\r\n            errors.SalesID = 'SalesID is required.';\r\n        }\r\n\r\n        if (!FAEID) {\r\n            errors.FAEID = 'FAEID is required.';\r\n        }\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }\r\n\r\n    const customerSubmit = () => {\r\n        if (isFormValid) {\r\n            console.log('Form submitted successfully!');\r\n            updatecustomer()\r\n        } else {\r\n            console.log('Form has errors. Please correct them.');\r\n            // errors.submit = '請檢查新增內容' \r\n            // setErrors(errors);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`${styles.display}`}>\r\n            <Head><title>{'修改客戶資訊'}</title></Head>\r\n            <div className={`${styles.display} ${styles.editprobe}`}>\r\n                {/* <div ><h1>{data.probeId ? '修改設備資訊' : '新增設備資訊'}</h1></div> */}\r\n                {/* {data.probeId ? '修改設備資訊' : '新增設備資訊'} */}\r\n                <div className={`${styles.probeInfo} ${styles.display}`}>\r\n                    <div className={`${styles.probetitle} ${styles.display}`}><h1>{'修改客戶資訊'}</h1></div>\r\n                    <div className={`${styles.probecontent}`}>\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>統一編號: </div>\r\n                            <div className={` ${styles.imputcell} ${styles.display} ${styles.justfycenter}`}>{GUInumber}\r\n                                {/* <input type='text' name='GUInumber' placeholder={GUInumber}  defaultValue={GUInumber}  /> */}\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.GUInumber && <p className={styles.error1}>{errors.GUInumber}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>公司名稱: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='Organization_Name' placeholder={'請輸入公司名稱'} value={Organization_Name ? Organization_Name : ''} onChange={(e) => {\r\n                                    setOrganization_Name(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.Organization_Name && <p className={styles.error1}>{errors.Organization_Name}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>公司地址: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='Organization_Address' placeholder={'請輸入公司地址'} value={Organization_Address ? Organization_Address : ''} onChange={(e) => {\r\n                                    setOrganization_Address(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.Organization_Address && <p className={styles.error1}>{errors.Organization_Address}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson' placeholder={'請輸入承辦人姓名'} value={contractPerson ? contractPerson : ''} onChange={(e) => {\r\n                                    setcontractPerson(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson && <p className={styles.error1}>{errors.contractPerson}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人電話: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson_PhoneNumber' placeholder={'請輸入承辦人電話'} value={contractPerson_PhoneNumber ? contractPerson_PhoneNumber : ''} onChange={(e) => {\r\n                                    setcontractPerson_PhoneNumber(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson_PhoneNumber && <p className={styles.error1}>{errors.contractPerson_PhoneNumber}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>承辦人Email: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='contractPerson_Email' placeholder={'請輸入承辦人Email'}  value={contractPerson_Email ? contractPerson_Email : ''} onChange={(e) => {\r\n                                    setcontractPerson_Email(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.contractPerson_Email && <p className={styles.error1}>{errors.contractPerson_Email}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>負責業務: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='SalesID' required value={SalesID ? SalesID : ''} onChange={(e) => {\r\n                                    setSalesID(e.target.value)\r\n                                }}>\r\n                                    <option value={\"\"}>請選擇業務</option>\r\n                                    <option value={2}>Jenlin</option>\r\n                                    <option value={1}>Wade</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.SalesID && <p className={styles.error1}>{errors.SalesID}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>負責工程師: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='FAEID' required value={FAEID ? FAEID : ''} onChange={(e) => {\r\n                                    setFAEID(e.target.value)\r\n                                }}>\r\n                                    <option value={\"\"}>請選擇工程師</option>\r\n                                    <option value={6}>Jason</option>\r\n                                    <option value={1}>Joy</option>\r\n                                    <option value={2}>Leo</option>\r\n                                    <option value={3}>Bobby</option>\r\n                                    <option value={4}>Jorden</option>\r\n                                    <option value={5}>Hank</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.FAEID && <p className={styles.error1}>{errors.FAEID}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.note} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>備註: </div>\r\n                            <div className={` ${styles.textareacell}`}>\r\n                                <textarea name='note' value={note ? note : ''} onChange={(e) => {\r\n                                    setNote(e.target.value)\r\n                                }}></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={` ${styles.confirm} ${styles.display} `}>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnleft}`} onClick={() => {\r\n                            router.back()\r\n                        }}>返回</div>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnright}`} onClick={() => {\r\n                            customerSubmit()\r\n                        }}>送出</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nEdit.getLayout = getLayout;\r\nexport default Edit","C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\customers\\infomation\\[Id].jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\edit\\index.jsx",[],[],"C:\\Users\\Lianchen\\Desktop\\nextJS\\pages\\probes\\edit\\[Id].jsx",["87"],[],"import styles from '../../../styles/index.module.scss'\r\nimport { getLayout } from '../../../componer/header/Header'\r\nimport Link from 'next/link'\r\nimport Head from 'next/head'\r\nimport { useRouter } from 'next/router'\r\nimport { use, useEffect, useState } from 'react'\r\nimport { redirect } from 'next/dist/server/api-utils'\r\n// import url from '../../../url/url'\r\n\r\n\r\n\r\nconst Edit = () => {\r\n    const router = useRouter();\r\n    const [data, setData] = useState([]);\r\n    const [probeId, setProbeId] = useState('');\r\n    const [hddcode, setHddcode] = useState('');\r\n    const [typecode, setTypecode] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [note, setNote] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n    const { Id } = router.query\r\n\r\n    const url = process.env.NEXT_PUBLIC_API_HOST\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!router.isReady) return;\r\n        console.log(process.env.NEXT_PUBLIC_API_HOST)\r\n\r\n        fetch(`http://${url}/api/Probe/detail/${Id}`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res)\r\n                setData(res[0]);\r\n                setProbeId(res[0].probeId)\r\n                setHddcode(res[0].hddcode)\r\n                setTypecode(res[0].typecode)\r\n                setPrice(res[0].price)\r\n                setNote(res[0].note)\r\n                console.log(res)\r\n            })\r\n    }, [router.isReady])\r\n\r\n    useEffect(() => {\r\n        let errors = {};\r\n\r\n        // if (!probeId) {\r\n        //     errors.probeId = 'probeId is required.';\r\n        // } else if (!(Number(probeId))) {\r\n        //     errors.probeId = 'probeId no a number.';\r\n        // }\r\n\r\n        if (!hddcode) {\r\n            errors.hddcode = 'hddcode is required.';\r\n        }\r\n\r\n        if (!typecode) {\r\n            errors.typecode = 'typecode is required.';\r\n        }\r\n\r\n        if (!price) {\r\n            errors.price = 'price is required.';\r\n        } else if (!(Number(price))) {\r\n            errors.price = 'price no a number.';\r\n        }\r\n\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }, [probeId, hddcode, typecode, price]);\r\n\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        // if (!probeId) {\r\n        //     errors.probeId = 'probeId is required.';\r\n        // } else if (!(Number(probeId))) {\r\n        //     errors.probeId = 'probeId no a number.';\r\n        // }\r\n\r\n        if (!hddcode) {\r\n            errors.hddcode = 'hddcode is required.';\r\n        }\r\n\r\n        if (!typecode) {\r\n            errors.typecode = 'typecode is required.';\r\n        }\r\n\r\n        if (!price) {\r\n            errors.price = 'price is required.';\r\n        } else if (!(Number(price))) {\r\n            errors.price = 'price no a number.';\r\n        }\r\n\r\n        setErrors(errors);\r\n        setIsFormValid(Object.keys(errors).length === 0);\r\n    }\r\n\r\n    const probeSubmit = () => {\r\n        if (isFormValid) {\r\n            console.log('Form submitted successfully!');\r\n            addprobe()\r\n        } else {\r\n            console.log('Form has errors. Please correct them.');\r\n            // errors.submit = '請檢查新增內容' \r\n            // setErrors(errors);\r\n        }\r\n    };\r\n\r\n    const updateProbeInfo = () => {\r\n        // const {Id} = router.query\r\n        const probeInfo = {\r\n            id: Id,\r\n            probeId: probeId,\r\n            type: typecode,\r\n            harddiskdrive: hddcode,\r\n            price: price,\r\n            note: note,\r\n        }\r\n        // console.log(probeInfo)\r\n        fetch(`http://${url}/api/Probe/update`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(probeInfo),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then((response) => {\r\n            response.json()\r\n            router.push('/probes/probelist')\r\n        })\r\n    }\r\n    return (\r\n        <div className={`${styles.display}`}>\r\n            <Head><title>{data.probeId ? '修改設備資訊' : '新增設備資訊'}</title></Head>\r\n            <div className={`${styles.display} ${styles.editprobe}`}>\r\n                <div className={`${styles.probeInfo} ${styles.display}`}>\r\n                    <div className={`${styles.probetitle} ${styles.display}`}><h1>{data.probeId ? '修改設備資訊' : '新增設備資訊'}</h1></div>\r\n                    <div className={`${styles.probecontent}`}>\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>probe ID: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='probeId' placeholder={probeId ? probeId : '請輸入 probeID'} value={probeId ? probeId : ''}\r\n                                // onChange={(e) => {\r\n                                //     setProbeId(e.target.value)\r\n                                // console.log(probeId)\r\n                                // }} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>硬碟: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='harddiskdrive' required value={hddcode ? hddcode : ''} onChange={(e) => {\r\n                                    setHddcode(e.target.value)\r\n                                    // console.log(hddcode)\r\n                                }}>\r\n                                    <option value={\"\"} >請選擇容量大小</option>\r\n                                    <option value={2} >8GB</option>\r\n                                    <option value={1} >16GB</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.hddcode && <p className={styles.error1}>{errors.hddcode}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>型號: </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <select name='probetype' required value={typecode ? typecode : ''} onChange={(e) => {\r\n                                    setTypecode(e.target.value)\r\n                                }}>\r\n                                    <option value={\"\"}>請選擇型號</option>\r\n                                    <option value={6}>P110</option>\r\n                                    <option value={1}>P120</option>\r\n                                    <option value={2}>P220</option>\r\n                                    <option value={3}>P360</option>\r\n                                    <option value={4}>P560</option>\r\n                                    <option value={5}>P110+(樹苺派4)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.typecode && <p className={styles.error1}>{errors.typecode}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>單價:  </div>\r\n                            <div className={` ${styles.imputcell}`}>\r\n                                <input type='text' name='probeId' placeholder={price ? price : '請輸入 單價'} defaultValue={price ? price : ''} onChange={(e) => {\r\n                                    setPrice(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        {!!errors.price && <p className={styles.error1}>{errors.price}</p>}\r\n                        <div className={`${styles.probeInfoCell} ${styles.note} ${styles.display}`}>\r\n                            <div className={`${styles.itemcell}`}>備註: </div>\r\n                            <div className={` ${styles.textareacell}`}>\r\n                                <textarea name='note' defaultValue={note ? note : ''} onChange={(e) => {\r\n                                    setNote(e.target.value)\r\n                                }}></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                    <div className={` ${styles.confirm} ${styles.display} `}>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnleft}`} onClick={() => router.back()}>放棄修改</div>\r\n                        <div className={`${styles.flex1} ${styles.display} ${styles.btnright}`} onClick={() => {\r\n                            updateProbeInfo('/probes/')\r\n                        }}>送出修改</div>\r\n                    </div>\r\n                </div >\r\n\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nEdit.getLayout = getLayout;\r\nexport default Edit",{"ruleId":"88","severity":1,"message":"89","line":125,"column":8,"nodeType":"90","endLine":125,"endColumn":24,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"89","line":125,"column":8,"nodeType":"90","endLine":125,"endColumn":24,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":45,"column":8,"nodeType":"90","endLine":45,"endColumn":24,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Id' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["94"],["95"],["96"],{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"97","fix":"100"},"Update the dependencies array to be: [Id, router.isReady, url]",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},[4477,4493],"[Id, router.isReady, url]",[4484,4500],[1493,1509]]